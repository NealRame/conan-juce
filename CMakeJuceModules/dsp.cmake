if(APPLE)
  set(JUCE_MODULE_HEADERS
    "${JUCE_MODULE_PATH}/containers/juce_AudioBlock.h"
    "${JUCE_MODULE_PATH}/containers/juce_SIMDRegister.h"
    "${JUCE_MODULE_PATH}/containers/juce_SIMDRegister_Impl.h"
    "${JUCE_MODULE_PATH}/filter_design/juce_FilterDesign.h"
    "${JUCE_MODULE_PATH}/frequency/juce_Convolution.h"
    "${JUCE_MODULE_PATH}/frequency/juce_FFT.h"
    "${JUCE_MODULE_PATH}/frequency/juce_Windowing.h"
    "${JUCE_MODULE_PATH}/maths/juce_FastMathApproximations.h"
    "${JUCE_MODULE_PATH}/maths/juce_LookupTable.h"
    "${JUCE_MODULE_PATH}/maths/juce_Matrix.h"
    "${JUCE_MODULE_PATH}/maths/juce_Phase.h"
    "${JUCE_MODULE_PATH}/maths/juce_Polynomial.h"
    "${JUCE_MODULE_PATH}/maths/juce_SpecialFunctions.h"
    "${JUCE_MODULE_PATH}/native/juce_avx_SIMDNativeOps.h"
    "${JUCE_MODULE_PATH}/native/juce_fallback_SIMDNativeOps.h"
    "${JUCE_MODULE_PATH}/native/juce_neon_SIMDNativeOps.h"
    "${JUCE_MODULE_PATH}/native/juce_sse_SIMDNativeOps.h"
    "${JUCE_MODULE_PATH}/processors/juce_Bias.h"
    "${JUCE_MODULE_PATH}/processors/juce_FIRFilter.h"
    "${JUCE_MODULE_PATH}/processors/juce_Gain.h"
    "${JUCE_MODULE_PATH}/processors/juce_IIRFilter.h"
    "${JUCE_MODULE_PATH}/processors/juce_IIRFilter_Impl.h"
    "${JUCE_MODULE_PATH}/processors/juce_LadderFilter.h"
    "${JUCE_MODULE_PATH}/processors/juce_Oscillator.h"
    "${JUCE_MODULE_PATH}/processors/juce_Oversampling.h"
    "${JUCE_MODULE_PATH}/processors/juce_ProcessContext.h"
    "${JUCE_MODULE_PATH}/processors/juce_ProcessorChain.h"
    "${JUCE_MODULE_PATH}/processors/juce_ProcessorDuplicator.h"
    "${JUCE_MODULE_PATH}/processors/juce_ProcessorWrapper.h"
    "${JUCE_MODULE_PATH}/processors/juce_Reverb.h"
    "${JUCE_MODULE_PATH}/processors/juce_StateVariableFilter.h"
    "${JUCE_MODULE_PATH}/processors/juce_WaveShaper.h"
    "${JUCE_MODULE_PATH}/juce_dsp.h"
  )
  set(JUCE_MODULE_SOURCES
    "${JUCE_MODULE_PATH}/containers/juce_SIMDRegister_test.cpp"
    "${JUCE_MODULE_PATH}/filter_design/juce_FilterDesign.cpp"
    "${JUCE_MODULE_PATH}/frequency/juce_Convolution.cpp"
    "${JUCE_MODULE_PATH}/frequency/juce_FFT.cpp"
    "${JUCE_MODULE_PATH}/frequency/juce_FFT_test.cpp"
    "${JUCE_MODULE_PATH}/frequency/juce_Windowing.cpp"
    "${JUCE_MODULE_PATH}/maths/juce_LookupTable.cpp"
    "${JUCE_MODULE_PATH}/maths/juce_Matrix.cpp"
    "${JUCE_MODULE_PATH}/maths/juce_Matrix_test.cpp"
    "${JUCE_MODULE_PATH}/maths/juce_SpecialFunctions.cpp"
    "${JUCE_MODULE_PATH}/native/juce_avx_SIMDNativeOps.cpp"
    "${JUCE_MODULE_PATH}/native/juce_neon_SIMDNativeOps.cpp"
    "${JUCE_MODULE_PATH}/native/juce_sse_SIMDNativeOps.cpp"
    "${JUCE_MODULE_PATH}/processors/juce_FIRFilter.cpp"
    "${JUCE_MODULE_PATH}/processors/juce_FIRFilter_test.cpp"
    "${JUCE_MODULE_PATH}/processors/juce_IIRFilter.cpp"
    "${JUCE_MODULE_PATH}/processors/juce_LadderFilter.cpp"
    "${JUCE_MODULE_PATH}/processors/juce_Oversampling.cpp"
  )
  set(JUCE_MODULE_DEPENDENCIES
    "-framework Accelerate"
  )
endif()
